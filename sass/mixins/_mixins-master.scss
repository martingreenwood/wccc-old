// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Create REM values with PX fall back
//
// Generate a REM with PX fallback from 
// $baseFontSize. Enter the desired size based
// on pixels in numerical form. Supports shorthand.
//
// Forked from: http://codepen.io/thejameskyle/pen/JmBjc
//
// @author Greg Rickaby
// @since 1.0
//
// Usage: @include rem($property, $values);
// Example Usage:
//    @include rem(font-size, 16px);
//    @include rem(margin, 0 24px 0 12px);
//
// Outputs:
//    font-size: 16px;
//    font-size: 1.6rem;
//    margin: 0 24px 0 12px;
//    margin: 0 2.4rem 0 1.2rem;
// ----------------------------------

$baseFontSize: 10; // Based on HTML reset html { font-size: 62.5%; }

@function parseInt($n) {
  @return $n / ($n * 0 + 1);
}

@mixin rem($property, $values) {
	$px : (); 
	$rem: ();
	
	$root: $baseFontSize;
	
	@each $value in $values {
		@if $value == 0 or $value == auto {
			$px : append($px , $value);
			$rem: append($rem, $value);
		}
		
		@else if type-of($value) == number { 
			$unit: unit($value);
			$val: parseInt($value);
			
			@if $unit == "px" {
				$px : append($px,  $value);
				$rem: append($rem, ($val / $root + rem));
			}
			
			@if $unit == "rem" {
				$px : append($px,  ($val * $root + px));
				$rem: append($rem, $value);
			}
		}
		
		@else {
			$px : append($px,  $value);
			$rem: append($rem, $value);
		}
	}
	
	@if $px == $rem {
		#{$property}: $px;
	} @else {
		#{$property}: $px;
		#{$property}: $rem;
	} 
}

@function rem($value) {
	$root: $baseFontSize;
	$val: parseInt($value);
	$return: ();
	
	@if unit($value) == "px" {
		$return: append($return, ($val / $root + rem));
	} @else {
		$return: append($return, ($val * $root + px));
	}
	
	@return $return;
}


// 1/4 width on Desktop and adjust appropriately based on device size
@mixin one-quarter {
	@include span-columns(1);
  
	@include media($medium-screen-up) {
		@include span-columns(2);
		@include omega(2n);
	}
	@include media($large-screen-up) {
		@include span-columns(2);
		@include omega(4n);
	}
	@include media($xl-screen-up) {
		@include span-columns(3);
		@include omega(4n);
	}
}

// 1/4 width on Desktop - no omegas - useful for mixing with other mixins such as one quarter + three quarter
@mixin one-quarter-nom { 
	@include span-columns(1);

	@include media($medium-screen-up) {
		@include span-columns(2);
	}
	@include media($large-screen-up) {
		@include span-columns(2);
	}
	@include media($xl-screen-up) {
		@include span-columns(3);
	}
}

// 1/3 width on Desktop
@mixin one-third {
	@include span-columns(1);
	
	@include media($medium-screen-up) {
		@include span-columns(4);
		@include omega(1n);
	} 
	@include media($large-screen-up) {
		@include span-columns(2.66);
		@include omega(3n);
	}
	@include media($xl-screen-up) {
		@include span-columns(4);
		@include omega(3n);
	}
}

// 1/3 width on Desktop - no omega
@mixin one-third-nom { 
	@include span-columns(1);
	
	@include media($medium-screen-up) {
		@include span-columns(4);
	}
	@include media($large-screen-up) {
		@include span-columns(2.66);
	}
	@include media($xl-screen-up) {
		@include span-columns(4);
	}
}

// 2/3 on Desktop - no omega
@mixin two-thirds-nom { 
	@include span-columns(1);
	
	@include media($medium-screen-up) {
		@include span-columns(4);
	}
	@include media($large-screen-up) {
		@include span-columns(5.33);
	}
	@include media($xl-screen-up) {
		@include span-columns(8);
	}
}

// 1/2 on Desktop
@mixin one-half {
	@include span-columns(1);

	@include media($medium-screen-up) {
		@include span-columns(4);
		@include omega(1n);
	}
	@include media($large-screen-up) {
		@include span-columns(4);
		@include omega(2n);
	}
	@include media($xl-screen-up) {
		@include span-columns(6);
		@include omega(2n);
	}
}


// 1/2 on Desktop - no omega
@mixin one-half-nom {
	@include span-columns(2);
	
	@include media($medium-screen-up) {
		@include span-columns(4);
	}
	@include media($large-screen-up) {
		@include span-columns(4);
	}
	@include media($xl-screen-up) {
		@include span-columns(6);
	}
}

// 100% width
@mixin full-span {
	@include span-columns(1);
	
	@include media($medium-screen-up) {
		@include span-columns(4);
	}
	@include media($large-screen-up) {
		@include span-columns(8);
	}
	@include media($xl-screen-up) {
		@include span-columns(12);
	}
}